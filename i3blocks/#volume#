#!/bin/bash
# Copyright (C) 2014 Julien Bonjean <julien@bonjean.info>
# Copyright (C) 2014 Alexander Keller <github@nycroth.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

#------------------------------------------------------------------------

# The second parameter overrides the mixer selection
# For PulseAudio users, use "pulse"
# For Jack/Jack2 users, use "jackplug"
# For ALSA users, you may use "default" for your primary card
# or you may use hw:# where # is the number of the card desired
MIXER="default"
[ -n "$(lsmod | grep pulse)" ] && MIXER="pulse"
#[ -n "$(lsmod | grep jack)" ] && MIXER="jackplug"
MIXER="${2:-$MIXER}"

# The instance option sets the control to report and configure
# This defaults to the first control of your selected mixer
# For a list of the available, use `amixer -D $Your_Mixer scontrols`
SCONTROL="${BLOCK_INSTANCE:-$(amixer -D $MIXER scontrols |
                  sed -n "s/Simple mixer control '\([A-Za-z ]*\)',0/\1/p" |
                  head -n1
                )}"

# The first parameter sets the step to change the volume by (and units to display)
# This may be in in % or dB (eg. 5% or 3dB)
STEP="${1:-5%}"

#------------------------------------------------------------------------

capability() { # Return "Capture" if the device is a capture device
  amixer -D $MIXER get $SCONTROL |
      Skip to content
  This repository ￼
  Pull requests
  Issues
  Gist
  ￼
  Watch 7
  ￼ Star 126
  ￼ Fork 18 mattbanks/dotfiles-syntax-highlighting-st2
  Code  Issues 0  Pull requests 1  Wiki  Pulse  Graphs
  User settings to bring ShellScript (Bash) syntax highlighting to dotfiles
  74 commits
  1 branch
  13 releases
  12 contributors
  JavaScript 100.0%
  JavaScript
  ￼ New file Find file
  ￼ HTTPS ￼￼
  Download ZIP￼Branch: master New pull request
  Latest commit f80256d  on Oct 3  1￼ mattbanks add michelegera as contributor
  README.mdadd michelegera as contributor2 months ago
  Shell-Unix-Generic.sublime-settingsAdd .editorconfig2 months ago
  README.md
  Dotfiles Syntax Highlighting for Sublime Text 2/3
  Want ShellScript (Bash) syntax highlighting for your dotfiles? You're damn right you do!

Get Started

Install via Package Control

File Types Supported

.ackrc
.aliases
.antigen
.bash_profile
.bash_prompt
.bashrc
.brew
.curlrc
.editorconfig
.env
.envrc
.exports
.extra
.functions
.git
.gitattributes
.gitconfig
.gitignore
.gitmodules
.hushlogin
.inputrc
.jshintignore
.npmignore
.npmrc
.osx
.packages
.pkginit
.screenrc
.symlink
.zlogin
.zlogout
.zprofile
.zshenv
.zshrc
.zsh-theme
.zpreztorc
.xsessionrc
.wgetrc
symlink
symlink
zshrc
zshenv
zlogin
zlogout
zprofile
zpreztorc
If you want other file types add them in or submit a pull request.

Credits

Matt Banks (@mattbanks)
Contributors

mathiasbynens
lotsofcode
vivek
darinmorrison
alrra
theskumar
kikobeats
fainder
Jeloi
gwarnants
michelegera
Status API Training Shop Blog About Pricingsed -n "s/  Capabilities:.*cvolume.*/Capture/p"
}

volume() {
  amixer -D $MIXER get $SCONTROL $(capability)
}

format() {
  perl_filter='if (/.*\[(\d+%)\] (\[(-?\d+.\d+dB)\] )?\[(on|off)\]/)'
  perl_filter+='{CORE::say $4 eq "off" ? "MUTE" : "'
  # If dB was selected, print that instead
  perl_filter+=$([[ $STEP = *dB ]] && echo '$3' || echo '$1')
  perl_filter+='"; exit}'
  perl -ne "$perl_filter"
}

#------------------------------------------------------------------------

case $BLOCK_BUTTON in
  3) amixer -q -D $MIXER sset $SCONTROL $(capability) toggle ;;  # right click, mute/unmute
  4) amixer -q -D $MIXER sset $SCONTROL $(capability) ${STEP}+ ;; # scroll up, increase
  5) amixer -q -D $MIXER sset $SCONTROL $(capability) ${STEP}- ;; # scroll down, decrease
esac

volume | format
